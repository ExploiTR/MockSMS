package hacks.exploitr.mockSms;


import android.app.Application;
import android.os.Handler;
import android.widget.Toast;

import androidx.annotation.Keep;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

import com.github.javiersantos.piracychecker.PiracyChecker;
import com.github.javiersantos.piracychecker.enums.PiracyCheckerCallback;
import com.github.javiersantos.piracychecker.enums.PiracyCheckerError;
import com.github.javiersantos.piracychecker.enums.PirateApp;

@Keep
public class MockApp extends Application {

	/*
	 * todo highlight
	 *
	 * todo https://stackoverflow.com/a/60843158/8572503
	 * */

	@Override
	public void onCreate() {
		new PiracyChecker(this)
				.enableEmulatorCheck(true)
				.enableUnauthorizedAppsCheck(true)
				.saveResultToSharedPreferences(getSharedPreferences("boo", MODE_PRIVATE), "valid_license")
				.callback(new PiracyCheckerCallback() {
					@Override
					public void allow() {
					}

					@Override
					public void dontAllow(@NonNull PiracyCheckerError error, @Nullable PirateApp app) {
						Toast.makeText(MockApp.this, error.toString(), Toast.LENGTH_SHORT).show();
						new Handler().postDelayed(() -> System.exit(0), 10000);
					}

					@Override
					public void onError(@NonNull PiracyCheckerError error) {
						if (!(error == PiracyCheckerError.UNKNOWN | error == PiracyCheckerError.CHECK_IN_PROGRESS)) {
							new Handler().postDelayed(() -> System.exit(0), 10000);
						}
					}
				})
				.start();
		super.onCreate();
	}

}
