package hacks.exploitr.mockSms.ui.primary;

import static android.content.pm.PackageManager.PERMISSION_GRANTED;

import android.Manifest;
import android.content.Intent;
import android.os.Bundle;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;

import hacks.exploitr.mockSms.constants.SimpleValues;
import hacks.exploitr.mockSms.R;
import io.reactivex.rxjava3.disposables.Disposable;
import io.reactivex.rxjava3.subjects.PublishSubject;
import io.reactivex.rxjava3.subjects.Subject;

public class Splash extends AppCompatActivity {

	String[] perms = new String[]{Manifest.permission.READ_CONTACTS, Manifest.permission.READ_SMS};

	boolean isGranted = true;
	Subject<Boolean> mObservable = PublishSubject.create();
	Disposable disposable;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_splash);

		method();

		for (String perm : perms) {
			if (ActivityCompat.checkSelfPermission(this, perm) != PERMISSION_GRANTED) {
				ActivityCompat.requestPermissions(this, perms, SimpleValues.PERM_REQ_CODE);
				isGranted = false;
				break;
			} else {
				isGranted = true;
			}
		}

		updateGrant(isGranted);
	}

	public void updateGrant(boolean grant) {
		isGranted = grant;
		mObservable.onNext(isGranted);
	}

	public void method() {
		disposable = mObservable.map(value -> value)
				.subscribe(aBoolean -> {
					if (aBoolean) {
						//	MobileAds.initialize(this, initializationStatus -> {
						startActivity(new Intent(Splash.this, ModeChooser.class));
						if (disposable != null)
							disposable.dispose();
						finish();
						//	});
					}
				});
	}

	@Override
	public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
		if (requestCode == SimpleValues.PERM_REQ_CODE) {
			int temp = 0;
			for (int result : grantResults) {
				temp += result;
			}
			if (temp == 0) {
				isGranted = true;
				updateGrant(true);
			} else {
				Toast.makeText(Splash.this, "Can't work without permissions!", Toast.LENGTH_SHORT).show();
				finishAndRemoveTask();
			}
		}
		super.onRequestPermissionsResult(requestCode, permissions, grantResults);
	}
}