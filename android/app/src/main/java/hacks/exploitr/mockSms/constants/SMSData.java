package hacks.exploitr.mockSms.constants;

public class SMSData {
	/**
	 * Message type: all messages.
	 */
	public static final int MESSAGE_TYPE_ALL = 0;
	/**
	 * Message type: inbox.
	 */
	public static final int MESSAGE_TYPE_INBOX = 1;
	/**
	 * Message type: sent messages.
	 */
	public static final int MESSAGE_TYPE_SENT = 2;
	/**
	 * Message type: drafts.
	 */
	public static final int MESSAGE_TYPE_DRAFT = 3;
	/**
	 * Message type: outbox.
	 */
	public static final int MESSAGE_TYPE_OUTBOX = 4;
	/**
	 * Message type: failed outgoing message.
	 */
	public static final int MESSAGE_TYPE_FAILED = 5;
	/**
	 * Message type: queued to send later.
	 */
	public static final int MESSAGE_TYPE_QUEUED = 6;
	/**
	 * The type of message.
	 * <P>Type: INTEGER</P>
	 */
	public static final String TYPE = "type";
	/**
	 * The address of the other party.
	 * <P>Type: TEXT</P>
	 */
	public static final String ADDRESS = "address";
	/**
	 * The date the message was received.
	 * <P>Type: INTEGER (long)</P>
	 */
	public static final String DATE = "date";
	/**
	 * The date the message was sent.
	 * <P>Type: INTEGER (long)</P>
	 */
	public static final String DATE_SENT = "date_sent";
	/**
	 * Has the message been read?
	 * <P>Type: INTEGER (boolean)</P>
	 */
	public static final String READ = "read";
	/**
	 * Has the message been seen by the user? The "seen" flag determines
	 * whether we need to show a notification.
	 * <P>Type: INTEGER (boolean)</P>
	 */
	public static final String SEEN = "seen";
	/**
	 * {@code TP-Status} value for the message, or -1 if no status has been received.
	 * <P>Type: INTEGER</P>
	 */
	public static final String STATUS = "status";

	public static final String DELIVERED = "delivered";
	/**
	 * TP-Status: no status received.
	 */
	public static final int STATUS_NONE = -1;
	/**
	 * TP-Status: complete.
	 */
	public static final int STATUS_COMPLETE = 0;
	/**
	 * TP-Status: pending.
	 */
	public static final int STATUS_PENDING = 32;
	/**
	 * TP-Status: failed.
	 */
	public static final int STATUS_FAILED = 64;
	/**
	 * The body of the message.
	 * <P>Type: TEXT</P>
	 */
	public static final String BODY = "body";
	/**
	 * Is the {@code TP-Reply-Path} flag set?
	 * <P>Type: BOOLEAN</P>
	 */
	public static final String REPLY_PATH_PRESENT = "reply_path_present";
	/**
	 * The service center (SC) through which to send the message, if present.
	 * <P>Type: TEXT</P>
	 */
	public static final String SERVICE_CENTER = "service_center";

	/**
	 * Nullish, use val null
	 * <P>Type: TEXT</P>
	 */
	public static final String SUBJECT = "subject";

	public static final String SIM_SLOT_SAMSUNG = "sim_slot";

	public static final String SIM_IMSI_SAMSUNG = "sim_imsi";

	public static final String SUB_SLOT_LYF = "sub_id";
	public static final String COLUMN_SIM_ID = "sim_id";

	public static String getSMS_typeText(int mode) {
		switch (mode) {
			case 1:
				return "inbox";
			case 2:
				return "sent";
			case 3:
				return "draft";
			case 4:
				return "outbox";
			case 5:
				return "failed";
			case 6:
				return "queued";
			default:
				return "all";
		}
	}
}
